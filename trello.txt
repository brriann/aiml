https://jupyter.org/
CS109 :: Data Science https://cs109.github.io/2015/pages/videos.html
https://towardsdatascience.com/loading-well-log-data-from-dlis-using-python-9d48df9a23e2
https://melaniemitchell.me/PapersContent/AIMagazine2020.pdf
https://docs.microsoft.com/en-us/azure/machine-learning/
Openai sumo
https://www.kaggle.com/
Googledrive::work::nlpai
SimRank
Andrew Ng ML online
Reagent.ai
word embedding
graph embedding
https://www.microsoft.com/en-us/ai/ai-school
https://towardsdatascience.com/types-of-machine-learning-algorithms-you-should-know-953a08248861
https://becominghuman.ai/cheat-sheets-for-ai-neural-networks-machine-learning-deep-learning-big-data-678c51b4b463
https://openai.com/blog/competitive-self-play/
https://www.coursera.org/learn/machine-learning
word2vec
https://www.deeplearning.ai/
embedded ML: https://www.youtube.com/watch?v=iTj0lcVSIVU
TensorFlow
gpt3
https://pub.towardsai.net/building-neural-networks-with-python-code-and-math-in-detail-ii-bbe8accbf3d1
https://www.sciencedirect.com/book/9780128219294/machine-learning-guide-for-oil-and-gas-using-python#book-description
https://opencog.org/
devtalk.nividia.com
developer.nvidia.com
deepcode.ai
https://en.wikipedia.org/wiki/Folding@home
https://en.wikipedia.org/wiki/Genome@home
Python Data Science Oil and Gas video https://www.youtube.com/watch?v=uwQ3To6b_rI

Supervised learning
Regression (continuous)
Classification (discrete)
Infinite dimensional spaces
Unsupervised learning
Clustering
Independent component analysis 
Reinforcement learning 
QBOT
https://github.com/LoisLab/qbot/
https://medium.com/@michael_87060/build-a-self-driving-q-bot-6aa67ba60769
https://en.wikipedia.org/wiki/Q-learning
https://github.com/jvon-challenges/guessing-games
https://github.com/jvon-challenges/qbot
https://www.youtube.com/watch?v=-1W7-Q0RIaM&feature=youtu.be
ML QBOT docs (3) (Drive)

Is this a Markov Chain?

void processInputFromUser (input) {
return find_response (input);
}
Map dict_of_responses <StringList,String >;

String find_response (input) {

String response;
StringList words = input.split (“ “);
int best_sequence_count = 0;
int current_sequence_count = 0;
foreach (word_set in dict_of_responses) {
int previous_index = 0;
current_sequence_count = 0;
foreach (word in words) {
if (word_set.indexOf(word) > previous_index) {
current_sequence_count += 1;
previous_index = word_set.indexOf (word);
}
if (current_sequence_count > best_sequence_count) {
best_sequence_count = current_sequence_count;
response = dict_of_responses [word_set];
}
if (!word_set.contains (word)) {
current_sequence_count -= 2;
} else {
if (word_set.indexOf (word) < previous_index) {
current_sequence_count -= 1;
}
}
}
}
return response;
}

// impenetation of dictionary

dict_of_responses[StringList("how","are","you","doing","today?")] = "Today im doing fine";

dict_of_responses[StringList("who","are","you?")] = "im a bot.";





